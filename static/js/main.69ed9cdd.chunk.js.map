{"version":3,"sources":["visuals/desktop/bgFooter.svg","visuals/desktop/bg-pattern-header.svg","visuals/desktop/icon-moon.svg","visuals/desktop/icon-check.svg","visuals/desktop/icon-location.svg","visuals/desktop/icon-sun.svg","visuals/desktop/icon-search.svg","visuals/desktop/logo.svg","visuals/desktop/error_logo.png","JobsContext.jsx","visuals/desktop/arrow.svg","Toggle/Toggle.jsx","Header/Header.jsx","Button/Button.jsx","SearchBar/SearchBar.jsx","Spinner/Spinner.jsx","ErrorDisplay/ErrorDisplay.jsx","JobPostings/JobPostings.jsx","JobPostingDetails/JobPostingDetails.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["defaultContext","defaultTheme","setDefaultTheme","BASE_URL","githubApi","a","error","setError","data","jobs","loading","resultLength","setResultLength","setFullTime","setLocationInput","setSearchURL","JobsContext","createContext","useJobsContext","useContext","Toggle","htmlTag","document","body","parentElement","useEffect","localStorage","getItem","setAttribute","setItem","className","src","iconSun","alt","type","id","onClick","htmlFor","iconMoon","Header","bgPatternHeader","logo","Button","children","SearchBar","searchInput","setSearchInput","locationInput","fullTime","name","placeholder","onChange","e","target","value","preventDefault","search","trim","replace","location","full","searchEndpoint","filter","Boolean","join","sessionStorage","Spinner","ErrorDisplay","noJobs","apiError","error_logo","statusCode","statusText","ResponsiveEllipsis","responsiveHOC","LinesEllipsis","colors","JobPosting","color","title","company_logo","company","created_at","to","style","backgroundColor","moment","fromNow","text","component","maxLine","JobPostings","match","Math","floor","random","length","searchURL","useState","anotherPage","setAnotherPage","window","innerWidth","setWindowWidth","pageXOffset","setResize","updateWidth","addEventListener","removeEventListener","initialSearch","map","job","company_url","endpoint","withinJobBoard","JobPostingDetails","posting","setPosting","find","params","jobID","url","applyNow","link","hostname","URL","startsWith","substring","shortenedUrl","href","margin","how_to_apply","rel","dangerouslySetInnerHTML","__html","description","backgroundImage","bgFooter","width","objectFit","App","setData","setLoading","console","info","Promise","resolve","setTimeout","json","mockPositions","ok","returnedResults","loadMoreData","result","prev","status","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69ed9cdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bgFooter.439c5055.svg\";","export default __webpack_public_path__ + \"static/media/bg-pattern-header.f3307602.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.038e80ca.svg\";","export default __webpack_public_path__ + \"static/media/icon-check.7b769ecf.svg\";","export default __webpack_public_path__ + \"static/media/icon-location.325ff3d9.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.9422c153.svg\";","export default __webpack_public_path__ + \"static/media/icon-search.09900c2e.svg\";","export default __webpack_public_path__ + \"static/media/logo.8c0b6449.svg\";","export default __webpack_public_path__ + \"static/media/error_logo.25039539.png\";","import { createContext, useContext } from \"react\";\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\nexport const defaultContext = {\n  defaultTheme: true,\n  setDefaultTheme: () => { },\n  BASE_URL,\n  githubApi: async () => { },\n  error: null,\n  setError: () => { },\n  data: { jobs: [] },\n  loading: false,\n  resultLength: 0,\n  setResultLength: () => { },\n  setFullTime: () => { },\n  setLocationInput: () => { },\n  setSearchURL: () => { }\n};\n\nexport const JobsContext = createContext(defaultContext);\n\nexport const useJobsContext = () => useContext(JobsContext);\n","export default __webpack_public_path__ + \"static/media/arrow.3e159206.svg\";","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { iconMoon, iconSun } from \"../visuals/desktop\";\nimport \"./Toggle.scss\";\nimport { useJobsContext } from \"../JobsContext\";\n\nconst Toggle = () => {\n\tconst { defaultTheme, setDefaultTheme } = useJobsContext();\n\n\tconst htmlTag = document.body.parentElement;\n\n\tuseEffect(() => {\n\t\tif (!localStorage.getItem(\"themes\")) {\n\t\t\tsetDefaultTheme(true);\n\t\t\tlocalStorage.setItem(\"themes\", \"defaultTheme\");\n\t\t\thtmlTag.setAttribute(\"data-theme\", \"defaultTheme\");\n\t\t} else {\n\t\t\thtmlTag.setAttribute(\"data-theme\", localStorage.getItem(\"themes\"));\n\t\t}\n\t}, [htmlTag, setDefaultTheme]);\n\n\tconst switchTheme = () => {\n\t\tif (!defaultTheme) {\n\t\t\tlocalStorage.setItem(\"themes\", \"defaultTheme\");\n\t\t\thtmlTag.setAttribute(\"data-theme\", localStorage.getItem(\"themes\"));\n\t\t\tsetDefaultTheme(true);\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"themes\", \"dark\");\n\t\t\thtmlTag.setAttribute(\"data-theme\", localStorage.getItem(\"themes\"));\n\t\t\tsetDefaultTheme(false);\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"theme-switch\">\n\t\t\t<span>\n\t\t\t\t<img className=\"theme-switch__logo\" src={iconSun} alt=\"sun\" />\n\t\t\t</span>\n\t\t\t<div className=\"toggle toggle__modes\">\n\t\t\t\t<input type=\"checkbox\" id=\"toggle__modes\"\n\t\t\t\t\tclassName={`toggle__checkbox ${!defaultTheme ? \"active\" : \"\"}`}\n\t\t\t\t\tonClick={() => switchTheme()} />\n\t\t\t\t<label className=\"toggle__btn\" htmlFor=\"toggle__modes\">\n\t\t\t\t\t<span className=\"toggle__feature\"></span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<span>\n\t\t\t\t<img className=\"theme-switch__logo\" src={iconMoon} alt=\"moon\" />\n\t\t\t</span>\n\t\t</div>\n\n\t)\n}\n\nexport default Toggle;","import React from \"react\";\nimport { bgPatternHeader, logo } from \"../visuals/desktop\";\nimport Toggle from \"../Toggle/Toggle\";\n\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <div className=\"header__desktop\">\n      <div className=\"header__backgrounds\">\n        <img className=\"header__banner\" src={bgPatternHeader} alt=\"\" />\n      </div>\n      <div className=\"header__inner\">\n        <img className=\"header__logo\" src={logo} alt=\"company logo\" />\n        <div className=\"header__toggle\">\n          <Toggle/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Button.scss\";\n\nconst Button = ({ children, onClick }) => {\n  return(\n    <button className=\"button\" onClick={onClick}>{children}</button>\n  )\n}\n\nexport default Button;","import React from \"react\";\nimport \"./SearchBar.scss\";\nimport { useJobsContext } from \"../JobsContext\";\nimport Button from \"../Button/Button.jsx\";\n\nconst SearchBar = () => {\n  const { BASE_URL, githubApi, searchInput, setSearchInput, locationInput, setLocationInput, fullTime, setFullTime, setSearchURL } = useJobsContext();\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n\n    let search = searchInput.trim() !== \"\"\n            ?   `description=${searchInput}`.replace(/ /g, \"+\")\n            :   \"\";\n\n        let location = locationInput.trim() !== \"\"\n            ?  `location=${locationInput}`.replace(/ /g, \"+\")\n            :   \"\";\n\n\n    let full = fullTime ? `full_time=on` : \"\"\n\n    let searchEndpoint = `${BASE_URL}?${[search, location, full].filter(Boolean).join(\"&\")}`\n\n    if (search || location || full) {\n        setSearchURL(searchEndpoint)\n        githubApi(searchEndpoint)\n        setSearchInput(\"search\", searchInput.trim())\n        setLocationInput(locationInput.trim());\n        setFullTime(\"full time\", fullTime)\n        sessionStorage.setItem(\"search URL\", searchEndpoint)\n    } else {\n        githubApi(`${BASE_URL}`)\n        setSearchURL(\"\")\n        sessionStorage.setItem(\"search URL\", \"\")\n    }      \n}\n\n  \n  return (\n    <div className=\"search\">\n      <label htmlFor=\"filter-title\"></label>\n      <input\n        type=\"text\"\n        id=\"filter-title\"\n        name=\"filter-title\"\n        placeholder=\"Filter by title\"\n        className=\"filter-title\"\n      ></input>\n      <input\n        type=\"text\"\n        id=\"filter-location\"\n        name=\"filter-location\"\n        placeholder=\"Filter by location\"\n        onChange={e => setLocationInput(e.target.value)}\n        value={locationInput}\n      ></input>\n      <div className=\"checkbox\">\n        <input className=\"checkbox__area\"\n          type=\"checkbox\"\n          id=\"full-time\"\n          name=\"full-time\"\n          value={fullTime}\n          onClick={() => setFullTime(!fullTime)}\n        ></input>\n        <p className=\"checkbox__text\">Full time only</p>\n      </div>\n      <Button onClick={handleSearch}>Search</Button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nimport \"./Spinner.scss\";\n\nconst Spinner = () => (\n  <div className=\"spinner\"></div>\n);\n\nexport default Spinner;","import React from \"react\";\nimport { error_logo } from \"../visuals/desktop\";\nimport { useJobsContext } from \"../JobsContext\";\n\nconst ErrorDisplay = ({ noJobs, apiError }) => {\n    const { error, location, search, full } = useJobsContext();\n    \n\n    return (\n        <div className=\"error\">\n            <img src={error_logo} alt=\"Error! Error! Bloody error!\" />\n            <div className={`error__message ${apiError ? \"visible\" : \"hidden\"}`}>\n                <h3>{error.statusCode}</h3>\n                <p>{error.statusText}</p>\n            </div>\n            <p className={`no__jobs ${noJobs ? \"visible\" : \"hidden\"}`}>No \n                <strong>{full === \"true\" ? \"full time\" : \"\"}</strong> \n                <strong>{search}</strong> jobs found {location ? \"in\" : \"\"} \n                <strong>{location}</strong>\n            </p>\n        </div>\n    )\n}\n\nexport default ErrorDisplay;","import React from \"react\";\nimport { useJobsContext } from \"../JobsContext\";\nimport { Link } from \"react-router-dom\";\nimport * as moment from \"moment\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport responsiveHOC from \"react-lines-ellipsis/lib/responsiveHOC\";\nimport \"./JobPostings.scss\";\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { useState, useContext, useEffect } from 'react';\nimport { JobsContext } from \"../JobsContext\";\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorDisplay from \"../ErrorDisplay/ErrorDisplay\";\n// import { arrow } from \"../visuals/desktop\"\n\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis);\n\n\nconst colors = [\n  \"#df6dae\",\n  \"#3db3d1\",\n  \"#3D3B94\",\n  \"#F0B62A\",\n  \"#E66D39\",\n  \"#222121\",\n  \"#5964E0\",\n  \"#FB7E66\",\n  \"#007CFF\",\n  \"#492A29\",\n  \"#60DCAD\",\n  \"#FF585F\",\n];\n\nexport const JobPosting = ({\n  id,\n  color,\n  title,\n  company_logo,\n  company,\n  created_at,\n  location,\n  type,\n}) => (\n  <div className=\"card\">\n    <Link className=\"card__link\" to={`/job/${id}`}>\n      <div className=\"card__header\">\n        <div className=\"card__logo\">\n          {company_logo ? (\n            <img\n              src={company_logo}\n              alt={`${company} company logo`}\n              style={{ backgroundColor: \"white\" }}\n            />\n          ) : (\n            <div\n              className=\"card__no-logo\"\n              style={{ backgroundColor: color }}\n            ></div>\n          )}\n        </div>\n      </div>\n      <span className=\"card__span\">{moment(created_at).fromNow()}</span>\n      <span className=\"card__span\">&#8226;</span>\n      <span className=\"card__span\">{type}</span>\n      <div className=\"card__body\">\n        <ResponsiveEllipsis\n          className=\"thumbnail__title\"\n          text={title}\n          component=\"h2\"\n          maxLine={2}\n        />\n        <small>{company}</small>\n      </div>\n      <div className=\"card__footer\">\n        <ResponsiveEllipsis\n          className=\"thumbnail__location\"\n          text={location}\n          component=\"small\"\n        />\n      </div>\n    </Link>\n  </div>\n);\n\n\n// Machine,\n// Please make website\n// All responsive like\n// With big pictures oooooh\n// Use my favorite fonts\n// Also fancy menu with woooosh on\n// Load fast, please\n//\n// Thanks, human.\n//\n// Also, no bugs\n\nJobPosting.propTypes = {\n  id: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  company_logo: PropTypes.string.isRequired,\n  company: PropTypes.string.isRequired,\n  created_at: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nconst JobPostings = ({ match }) => {\n  const color = colors[Math.floor(Math.random() * colors.length)];\n  const {\n    data: { jobs },\n  } = useJobsContext();\n\n  const { BASE_URL, githubApi, loading, error, resultLength, searchURL } = useContext(JobsContext);\n  const [anotherPage, setAnotherPage] = useState(2);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [resize, setResize] = useState(window.pageXOffset);\n\n  function useWindowSize() {\n    useEffect(() => {\n      function updateWidth() {\n        setWindowWidth(window.innerWidth)\n        setResize(window.pageXOffset)\n      }\n      window.addEventListener(\"resize\", updateWidth)\n      updateWidth()\n      return () => window.removeEventListener(\"resize\", updateWidth)\n    }, [])\n    return [resize, windowWidth]\n  }\n\n  useEffect(() => {\n    setAnotherPage(2)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resultLength < 50])\n\n  const loadMore = () => {\n    setAnotherPage(anotherPage + 1)\n\n    const endpoint = searchURL\n      ? `${searchURL}&page=${anotherPage}`\n      : `${BASE_URL}.json?page=${anotherPage}`\n\n    githubApi(endpoint)\n    sessionStorage.setItem(\"search URL\", endpoint)\n  }\n\n  useWindowSize();\n  \n\n  return (\n    <div className=\"main-container\">\n      <SearchBar />\n      {loading && !searchURL && (<Spinner initialSearch />)}\n      {error.error && (<ErrorDisplay apiError />)}\n      {!error.error && !loading && searchURL && jobs.length === 0 && (<ErrorDisplay noJobs />)}\n      {jobs && !error.error && (\n        <>\n          <div className=\"cards-container\">\n            {jobs.map((job) => (\n              <JobPosting\n                key={job.id}\n                color={color}\n                id={job.id}\n                title={job.title}\n                company_logo={job.company_logo}\n                company={job.company}\n                created_at={job.created_at}\n                company_url={job.company_url}\n                location={job.location}\n                type={job.type}\n              />\n            ))}\n            {resultLength >= 50 && (\n              <button className=\"button__load button\" onClick={loadMore}>Load More</button>\n            )}\n            {anotherPage > 2 && !searchURL && loading && (<Spinner withinJobBoard />)}\n\n          </div>\n\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default JobPostings;\n\n/*\nwindow width in the state\nthen:\n\nwindow.addEventListener(\"resize\", updateWidth)\n\nwindow.removeEventListener(\"resize\", updateWidth)\n\nupdateWidth()\n\nrender() {\n  const { width } = useState;\n  const isMobile = width <= 500;\n\n  if (isMobile) {\n    return (\n      <div>something</div>\n    );\n  } else {\n    return (\n      <div>something else</div>\n    );\n  }\n}\n*/\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { JobsContext } from \"../JobsContext\";\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorDisplay from \"../ErrorDisplay/ErrorDisplay\";\nimport * as moment from \"moment\";\nimport \"./JobPostingDetails.scss\";\nimport Button from \"../Button/Button\";\nimport { bgFooter } from \"../visuals/desktop\";\n\n\nconst colors = [\n  \"#df6dae\",\n  \"#3db3d1\",\n  \"#3D3B94\",\n  \"#F0B62A\",\n  \"#E66D39\",\n  \"#222121\",\n  \"#5964E0\",\n  \"#FB7E66\",\n  \"#007CFF\",\n  \"#492A29\",\n  \"#60DCAD\",\n  \"#FF585F\",\n];\n\nconst color = colors[Math.floor(Math.random() * colors.length)];\n\n\nconst JobPostingDetails = ({ match }) => {\n  const { data: { jobs }, loading, error } = useContext(JobsContext);\n\n  // useEffect(() => {\n  //   if (!jobs) {\n  //     githubApi(BASE_URL)\n  //   }\n  // }, [BASE_URL, githubApi, jobs]);\n\n  // if (loading) {\n  //   return (\n  //     <Spinner />\n  //   )\n  // }\n  const [posting, setPosting] = useState();\n\n  useEffect(() => {\n    jobs && setPosting(jobs.find((posting) => posting.id === match.params.jobID));\n  }, [jobs, match.params.jobID]);\n\n  const job = jobs.find((posting) => posting.id === match.params.jobID);\n\n  if (!job) {\n    return (\n      <div>Job not found</div>\n    )\n  }\n\n  const shortenedUrl = (url) => {\n    if (!url || url === \"http:\" || url === \"https:\") {\n      return \"\";\n    }\n    const { hostname } = new URL(url);\n    if (hostname.startsWith(\"www.\")) {\n      return hostname.substring(4);\n    }\n    return hostname;\n  }\n\n  const probablyFunctionalSite = (url) => {\n    if (!url) return false;\n    return url.startsWith(\"http\") || url.startsWith(\"www\");\n  }\n\n  const applyNow = link => {\n    let valid = /<a\\s+(?:[^>]*?\\s+)?href=\"([^\"]*)\"/;\n    return link.match(valid)[1];\n  }\n\n\n\n  return (\n    <>\n      <Link to=\"/jobs\"></Link>\n      {loading && (<Spinner />)}\n      {error.error && (<ErrorDisplay />)}\n      {posting && !error.error && (\n        <div>\n          <div className=\"details\">\n            <div className=\"details__header\">\n              {posting.company_logo && (<img src={posting.company_logo} alt={`${posting.company} company logo`} />)}\n              {!posting.company_logo && (<div className=\"no-logo\" style={{ backgroundColor: color }}>n / a</div>)}\n              <div className=\"details__header__inner\">\n                <h1 className=\"details__header__heading\">{posting.company}</h1>\n                <h3 className=\"details__header__company-url\">{shortenedUrl(posting.company_url)}</h3>\n                <div className={`details__header__company-redirect ${!probablyFunctionalSite(posting.company_url) ? 'invalid' : \"\"}`}>\n                </div>\n              </div>\n              <Button className=\"details__button button\" href={posting.company_url}>\n                Company site\n              </Button>\n            </div>\n            <div className=\"details__body\">\n              <div className=\"details__body__heading\">\n                <div className=\"details__timestamp\">\n                  <span className=\"details__time\">{moment(posting.created_at).fromNow()}</span>\n                  <span className=\"details__dot\" style={{ margin: \"0 10px\" }}>•</span>\n                  <span className=\"details__type\">{posting.type}</span>\n                  <h1 className=\"details__title\">{posting.title}</h1>\n                  <h3 className=\"details__location\">{posting.location}</h3>\n                </div>\n                <div className=\"details__container\">\n                  <Button className=\"body__button button\" href={applyNow(posting.how_to_apply)} target=\"_blank\" rel=\"noopener noreferrer\">Apply Now</Button>\n                </div>\n              </div>\n              <div className=\"details__main\" dangerouslySetInnerHTML={{ __html: posting.description }}></div>\n              <div className=\"details__application\" style={{ backgroundImage: `url(${bgFooter})`, width: \"100%\", objectFit: \"cover\" }}>\n                <h3 className=\"application__heading\">How to apply</h3><br />\n                <p className=\"application__body\" dangerouslySetInnerHTML={{ __html: posting.how_to_apply }} />\n              </div>\n            </div>\n          </div>\n          <footer className=\"details__footer\" >\n            <div className=\"details__footer__text\">\n              <h3 className=\"footer__text\">{posting.title}</h3>\n              <small className=\"footer__company\">{posting.company}</small>\n            </div>\n            <Button className=\"footer__button button\" href={applyNow(posting.how_to_apply)} rel=\"noopener noreferrer\" target=\"_blank\">\n              Apply Now\n            </Button>\n          </footer>\n        </div>\n      )}\n\n    </>\n  )\n}\nexport default JobPostingDetails;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import Header from \"./Header/Header\";\nimport React, { useState, useEffect } from \"react\";\nimport { JobsContext } from \"./JobsContext\";\nimport JobPostings from \"./JobPostings/JobPostings\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport JobPostingDetails from \"./JobPostingDetails/JobPostingDetails\";\n\nimport mockPositions from './mock-data/positions.json';\n\nfunction fakeFetch() {\n  return new Promise((resolve) => setTimeout(() => resolve({\n    json: async () => mockPositions,\n    ok: true\n  }), 2000));\n}\n\nfunction App() {\n  const [defaultTheme, setDefaultTheme] = useState(\n    localStorage.getItem(\"themes\") === \"default\" ? true : false\n  );\n  const BASE_URL =\n    \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n  const [data, setData] = useState({ jobs: [] });\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState({ error: false });\n  const [resultLength, setResultLength] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [locationInput, setLocationInput] = useState(\"\");\n  const [fullTime, setFullTime] = useState(false);\n  const [searchURL, setSearchURL] = useState(\"\");\n  \n\n  const githubApi = async (url) => {\n    console.info(\"fetching jobs\");\n    setLoading(true);\n    let returnedResults = await fakeFetch(); //fetch(url);\n\n    let loadMoreData = url.search(\"page\");\n\n    if (returnedResults.ok) {\n      let result = await returnedResults.json();\n\n      setData((prev) => ({\n        ...prev,\n        jobs: loadMoreData !== -1 ? [...prev.jobs, ...result] : [...result],\n      }));\n      setResultLength(result.length);\n    } else {\n      setError({\n        error: true,\n        statusCode: returnedResults.status,\n        statusText: returnedResults.statusText,\n      });\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    githubApi(BASE_URL);\n  }, []);\n\n  return (\n    <JobsContext.Provider\n      value={{\n        defaultTheme,\n        setDefaultTheme,\n        BASE_URL,\n        githubApi,\n        error,\n        setError,\n        data,\n        loading,\n        resultLength,\n        setResultLength,\n        searchInput, \n        setSearchInput,\n        locationInput, \n        setLocationInput,\n        fullTime, \n        setFullTime,\n        searchURL,\n        setSearchURL\n      }}\n    >\n      <Header />\n      \n\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/job/:jobID\" component={JobPostingDetails} />\n          <Route path=\"/\" component={JobPostings} />\n        </Switch>\n      </BrowserRouter>\n    </JobsContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/styles.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}